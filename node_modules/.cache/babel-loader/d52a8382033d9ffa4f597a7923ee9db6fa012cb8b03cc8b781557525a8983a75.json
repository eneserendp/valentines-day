{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\enes_\\\\Desktop\\\\validate\\\\src\\\\components\\\\AudioPlayer.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport { SpeakerWaveIcon, SpeakerXMarkIcon } from '@heroicons/react/24/outline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AudioPlayer({\n  currentStoryIndex\n}) {\n  _s();\n  const [isMuted, setIsMuted] = useState(false);\n  const audioRef = useRef(null);\n  const songs = [{\n    url: \"https://example.com/song1.mp3\",\n    // Örnek müzik URL'leri\n    startAt: 0,\n    // İlk hikaye\n    endAt: 2 // 3. hikayeye kadar\n  }, {\n    url: \"https://example.com/song2.mp3\",\n    startAt: 3,\n    // 4. hikaye\n    endAt: 5\n  }\n  // Daha fazla şarkı eklenebilir\n  ];\n  useEffect(() => {\n    const currentSong = songs.find(song => currentStoryIndex >= song.startAt && currentStoryIndex <= song.endAt);\n    if (currentSong && audioRef.current) {\n      audioRef.current.src = currentSong.url;\n      if (!isMuted) {\n        audioRef.current.play();\n      }\n    }\n  }, [currentStoryIndex, isMuted]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"absolute bottom-16 right-4 z-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsMuted(!isMuted),\n      className: \"p-2 rounded-full bg-black bg-opacity-50 hover:bg-opacity-70 transition-all\",\n      children: isMuted ? /*#__PURE__*/_jsxDEV(SpeakerXMarkIcon, {\n        className: \"h-6 w-6 text-white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(SpeakerWaveIcon, {\n        className: \"h-6 w-6 text-white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      loop: true,\n      muted: isMuted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(AudioPlayer, \"BAXYexGR9FPoSS3X0QHkzjZy4hU=\");\n_c = AudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["useState","useEffect","useRef","SpeakerWaveIcon","SpeakerXMarkIcon","jsxDEV","_jsxDEV","AudioPlayer","currentStoryIndex","_s","isMuted","setIsMuted","audioRef","songs","url","startAt","endAt","currentSong","find","song","current","src","play","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","loop","muted","_c","$RefreshReg$"],"sources":["C:/Users/enes_/Desktop/validate/src/components/AudioPlayer.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport { SpeakerWaveIcon, SpeakerXMarkIcon } from '@heroicons/react/24/outline';\r\n\r\nexport default function AudioPlayer({ currentStoryIndex }) {\r\n  const [isMuted, setIsMuted] = useState(false);\r\n  const audioRef = useRef(null);\r\n\r\n  const songs = [\r\n    {\r\n      url: \"https://example.com/song1.mp3\", // Örnek müzik URL'leri\r\n      startAt: 0, // İlk hikaye\r\n      endAt: 2 // 3. hikayeye kadar\r\n    },\r\n    {\r\n      url: \"https://example.com/song2.mp3\",\r\n      startAt: 3, // 4. hikaye\r\n      endAt: 5\r\n    },\r\n    // Daha fazla şarkı eklenebilir\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const currentSong = songs.find(\r\n      song => currentStoryIndex >= song.startAt && currentStoryIndex <= song.endAt\r\n    );\r\n\r\n    if (currentSong && audioRef.current) {\r\n      audioRef.current.src = currentSong.url;\r\n      if (!isMuted) {\r\n        audioRef.current.play();\r\n      }\r\n    }\r\n  }, [currentStoryIndex, isMuted]);\r\n\r\n  return (\r\n    <div className=\"absolute bottom-16 right-4 z-50\">\r\n      <button\r\n        onClick={() => setIsMuted(!isMuted)}\r\n        className=\"p-2 rounded-full bg-black bg-opacity-50 hover:bg-opacity-70 transition-all\"\r\n      >\r\n        {isMuted ? (\r\n          <SpeakerXMarkIcon className=\"h-6 w-6 text-white\" />\r\n        ) : (\r\n          <SpeakerWaveIcon className=\"h-6 w-6 text-white\" />\r\n        )}\r\n      </button>\r\n      <audio ref={audioRef} loop={true} muted={isMuted} />\r\n    </div>\r\n  );\r\n} "],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,SAASC,eAAe,EAAEC,gBAAgB,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhF,eAAe,SAASC,WAAWA,CAAC;EAAEC;AAAkB,CAAC,EAAE;EAAAC,EAAA;EACzD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMY,QAAQ,GAAGV,MAAM,CAAC,IAAI,CAAC;EAE7B,MAAMW,KAAK,GAAG,CACZ;IACEC,GAAG,EAAE,+BAA+B;IAAE;IACtCC,OAAO,EAAE,CAAC;IAAE;IACZC,KAAK,EAAE,CAAC,CAAC;EACX,CAAC,EACD;IACEF,GAAG,EAAE,+BAA+B;IACpCC,OAAO,EAAE,CAAC;IAAE;IACZC,KAAK,EAAE;EACT;EACA;EAAA,CACD;EAEDf,SAAS,CAAC,MAAM;IACd,MAAMgB,WAAW,GAAGJ,KAAK,CAACK,IAAI,CAC5BC,IAAI,IAAIX,iBAAiB,IAAIW,IAAI,CAACJ,OAAO,IAAIP,iBAAiB,IAAIW,IAAI,CAACH,KACzE,CAAC;IAED,IAAIC,WAAW,IAAIL,QAAQ,CAACQ,OAAO,EAAE;MACnCR,QAAQ,CAACQ,OAAO,CAACC,GAAG,GAAGJ,WAAW,CAACH,GAAG;MACtC,IAAI,CAACJ,OAAO,EAAE;QACZE,QAAQ,CAACQ,OAAO,CAACE,IAAI,CAAC,CAAC;MACzB;IACF;EACF,CAAC,EAAE,CAACd,iBAAiB,EAAEE,OAAO,CAAC,CAAC;EAEhC,oBACEJ,OAAA;IAAKiB,SAAS,EAAC,iCAAiC;IAAAC,QAAA,gBAC9ClB,OAAA;MACEmB,OAAO,EAAEA,CAAA,KAAMd,UAAU,CAAC,CAACD,OAAO,CAAE;MACpCa,SAAS,EAAC,4EAA4E;MAAAC,QAAA,EAErFd,OAAO,gBACNJ,OAAA,CAACF,gBAAgB;QAACmB,SAAS,EAAC;MAAoB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAEnDvB,OAAA,CAACH,eAAe;QAACoB,SAAS,EAAC;MAAoB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAClD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC,eACTvB,OAAA;MAAOwB,GAAG,EAAElB,QAAS;MAACmB,IAAI,EAAE,IAAK;MAACC,KAAK,EAAEtB;IAAQ;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEV;AAACpB,EAAA,CA9CuBF,WAAW;AAAA0B,EAAA,GAAX1B,WAAW;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}